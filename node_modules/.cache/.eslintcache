[{"E:\\COURSE\\REACT_JS_n_PWA\\crud\\retail\\src\\index.js":"1","E:\\COURSE\\REACT_JS_n_PWA\\crud\\retail\\src\\App.js":"2","E:\\COURSE\\REACT_JS_n_PWA\\crud\\retail\\src\\reportWebVitals.js":"3","E:\\COURSE\\REACT_JS_n_PWA\\crud\\retail\\src\\components\\Camera\\CameraModule.js":"4","E:\\COURSE\\REACT_JS_n_PWA\\crud\\retail\\src\\components\\Maps\\GoogleMaps.js":"5","E:\\COURSE\\REACT_JS_n_PWA\\crud\\retail\\src\\components\\RetailCreate\\Main.js":"6","E:\\COURSE\\REACT_JS_n_PWA\\crud\\retail\\src\\components\\Home\\Home.js":"7","E:\\COURSE\\REACT_JS_n_PWA\\crud\\retail\\src\\components\\RetailList\\List.js":"8","E:\\COURSE\\REACT_JS_n_PWA\\crud\\retail\\src\\components\\Table\\Table.js":"9"},{"size":513,"mtime":1654175720375,"results":"10","hashOfConfig":"11"},{"size":176,"mtime":1654187352012,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":738,"mtime":1653374409176,"results":"14","hashOfConfig":"11"},{"size":2278,"mtime":1655640646781,"results":"15","hashOfConfig":"11"},{"size":22001,"mtime":1658154536666,"results":"16","hashOfConfig":"11"},{"size":1009,"mtime":1654196597339,"results":"17","hashOfConfig":"11"},{"size":2202,"mtime":1656956553477,"results":"18","hashOfConfig":"11"},{"size":2136,"mtime":1656956691859,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"my3szw",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"23"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"23"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"E:\\COURSE\\REACT_JS_n_PWA\\crud\\retail\\src\\index.js",[],[],[],"E:\\COURSE\\REACT_JS_n_PWA\\crud\\retail\\src\\App.js",[],[],"E:\\COURSE\\REACT_JS_n_PWA\\crud\\retail\\src\\reportWebVitals.js",[],[],"E:\\COURSE\\REACT_JS_n_PWA\\crud\\retail\\src\\components\\Camera\\CameraModule.js",["53","54"],[],"import React, { useState } from 'react'\r\nimport Webcam from \"react-webcam\";\r\n\r\nconst CameraModule = (props) => {\r\n\r\n  const [videoConstraints, setvideoConstraints] = useState(\r\n    {\r\n      width: 1280,\r\n      height: 720,\r\n      facingMode: \"environment\"\r\n    }\r\n  );\r\n\r\n  const webcamRef = React.useRef(null);\r\n  const capture = React.useCallback(\r\n    () => {\r\n      props.AddLiveImage(webcamRef.current.getScreenshot()) ;\r\n    },\r\n    [webcamRef]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Webcam\r\n        audio={false}\r\n        ref={webcamRef}\r\n        screenshotFormat=\"image/jpeg\"\r\n        videoConstraints={videoConstraints}\r\n      />\r\n      <span onClick={capture}>Capture photo</span>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CameraModule","E:\\COURSE\\REACT_JS_n_PWA\\crud\\retail\\src\\components\\Maps\\GoogleMaps.js",["55","56"],[],"import React, { useState } from 'react'\r\nimport { useMemo } from \"react\";\r\nimport { GoogleMap, useLoadScript, Marker, InfoWindow } from '@react-google-maps/api';\r\nimport './gmap.css' ;\r\n\r\nconst libraries = [\"places\"] ;\r\nconst mapContainerStyle = {\r\n  width:\"50vw\",\r\n  height: \"50vh\",\r\n};\r\n\r\nconst options = {\r\n  // styles: MapStyles,\r\n  // disableDefaultUI: true,\r\n  zoomControl: true,\r\n};\r\n\r\nconst GoogleMaps = (props) => {\r\n\r\n  const [latitude, setlatitude] = useState(false);\r\n  const [longitude, setlongitude] = useState(false);\r\n  const [located, setlocated] = useState(false);\r\n\r\n  const center = {\r\n    lat: latitude,\r\n    lng: longitude,\r\n  };\r\n  \r\n    const getlocation = async() => {\r\n      setlocated(true);\r\n      navigator.geolocation.getCurrentPosition(function(position) {\r\n        console.log(\"Latitude is :\", position.coords.latitude);\r\n        console.log(\"Longitude is :\", position.coords.longitude);\r\n\r\n        setlatitude(position.coords.latitude);\r\n        setlongitude(position.coords.longitude);\r\n\r\n        if (loadError) return \"Error Loading Maps\" ;\r\n        if ( isLoaded) return \"Loading Maps\" ;\r\n      })\r\n    }\r\n\r\n    const {isLoaded, loadError} = useLoadScript({\r\n      googleMapsApiKey: process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY,\r\n      libraries,\r\n    });\r\n\r\n    props.AddLatLong(latitude,longitude);\r\n\r\n    return (\r\n    <div>\r\n      <span className='location_btn' onClick={( () => { getlocation() } )}>Get Current Location*</span>\r\n      <div><br></br></div>\r\n      { latitude && longitude && \r\n      <GoogleMap\r\n      mapContainerStyle={mapContainerStyle}\r\n      options={options}\r\n      zoom={15}\r\n      center={center}\r\n      onClick={ (event) => {\r\n        setlatitude( event.latLng.lat() );\r\n        setlongitude( event.latLng.lng() );\r\n      } }\r\n      >\r\n        <span className=\"locate\">\r\n      <img onClick={( () => { getlocation() } )} className='locator_icon'  src={require('../images/pointer.webp')} alt=\"compass\" />\r\n    </span>\r\n      <Marker position={ { lat: latitude , lng: longitude } }  >   </Marker>\r\n      <InfoWindow position={ { lat: latitude , lng: longitude } }>\r\n        <div>\r\n        Your Location\r\n        </div> \r\n      </InfoWindow>\r\n      </GoogleMap>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GoogleMaps","E:\\COURSE\\REACT_JS_n_PWA\\crud\\retail\\src\\components\\RetailCreate\\Main.js",["57","58","59","60","61","62","63","64","65","66"],[],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { openDB, deleteDB, wrap, unwrap } from \"idb\";\r\nimport \"./style.css\";\r\nimport GoogleMaps from \"../Maps/GoogleMaps\";\r\nimport CameraModule from \"../Camera/CameraModule\";\r\nimport { BrowserView, MobileView, isBrowser, isMobile } from 'react-device-detect';\r\n\r\nfunction Main() {\r\n  const [name, setname] = useState(\"\");\r\n  const [email, setemail] = useState(\"\");\r\n  const [contact1, setcontact1] = useState();\r\n  const [contact2, setcontact2] = useState(\"\");\r\n  const [retailsize, setretailsize] = useState(\"\");\r\n  const [itautomation, setitautomation] = useState(\"Automated\");\r\n\r\n  const [mobile, setmobile] = useState(false);\r\n  const [tab, settab] = useState(false);\r\n  const [computer, setcomputer] = useState(false);\r\n  const [printer, setprinter] = useState(false);\r\n  const [scanner, setscanner] = useState(false);\r\n\r\n  const [nomobile, setnomobile] = useState(0);\r\n  const [notab, setnotab] = useState(0);\r\n  const [nocomputer, setnocomputer] = useState(0);\r\n  const [noprinter, setnoprinter] = useState(0);\r\n  const [noscanner, setnoscanner] = useState(0);\r\n\r\n  const [submitted, setsubmitted] = useState(false);\r\n  const [located, setlocated] = useState(false);\r\n  const [latitude, setlatitude] = useState(\"\");\r\n  const [longitude, setlongitude] = useState(\"\");\r\n  const [error, seterror] = useState(\"\");\r\n  const [image_upload, setimage_upload] = useState();\r\n  const [live_capture, setlive_capture] = useState();\r\n  const [blobimage, setblobimage] = useState();\r\n  const [image_upload_size, setimage_upload_size] = useState();\r\n  const [live_capture_size, setlive_capture_size] = useState();\r\n\r\n  const [checkexpo, setcheckexpo] = useState(\"NOT LOADED\");\r\n\r\n  useEffect(() => {\r\n    // if(isMobile)\r\n    // {\r\n    //   window.onload = (event) => {\r\n    //     setcheckexpo(\"PAGE LOADED\");\r\n    //   }\r\n    //   window.ReactNativeWebView.postMessage(JSON.stringify({ message: \"your message\" , data: \"your data\"}));\r\n    // }\r\n    openDB(\"retail\", 1, {\r\n      upgrade(db) {\r\n        db.createObjectStore(\"details\", { keyPath: \"email\" });\r\n      },\r\n    });\r\n    \r\n  }, []);\r\n\r\n  // useEffect( () => {\r\n\r\n  //   const use_effect_update_mysql_with_idb = async () => {\r\n  //     console.log(\"INSIDE update_mysql_with_idb\") ;\r\n  //     const db = await openDB(\"retail\", 1);\r\n  //     const idb_data = await db.getAll(\"details\");\r\n  //     console.log(idb_data);\r\n\r\n  //     idb_data.map( (info) => {\r\n  //       console.log(info.mysql_sync);\r\n  //       if( info.mysql_sync === false )\r\n  //       {\r\n  //         console.log(info.email);\r\n\r\n  //         let form_data = new FormData();\r\n  //         form_data.append('name', info.name);\r\n  //         form_data.append('email', info.email);\r\n  //         form_data.append('contact_number1', info.contact_number1);\r\n  //         form_data.append('contact_number2', info.contact_number2);\r\n  //         form_data.append('retail_size', info.retail_size);\r\n  //         form_data.append('it_automation', info.it_automation);\r\n  //         form_data.append('no_of_mobile', info.no_of_mobile);\r\n  //         form_data.append('no_of_tab', info.no_of_tab);\r\n  //         form_data.append('no_of_computer', info.no_of_computer);\r\n  //         form_data.append('no_of_printer', info.no_of_printer);\r\n  //         form_data.append('no_of_scanner', info.no_of_scanner);\r\n  //         form_data.append('latitude', info.latitude);\r\n  //         form_data.append('longitude', info.longitude);\r\n  //         form_data.append('image', info.image );\r\n\r\n  //         axios.post(\"https://django-retail-app.herokuapp.com/retail/create/\",form_data, {\r\n  //           headers: {\r\n  //             'content-type': 'multipart/form-data',\r\n  //           }\r\n  //         })\r\n  //           .then(async(response) => {\r\n  //             // const json_data =await response.json();\r\n  //             // console.log(\"mysql response\", json_data);\r\n  //             console.log(\" FETCH RESPONSE \"+ response.status) ;\r\n\r\n  //             if (response.status >= 400 && response.status <= 599) {\r\n\r\n  //               const temp = info.email + \"response status \" + response.status ;\r\n  //               seterror(temp);\r\n\r\n  //             } else\r\n  //             {\r\n  //               const indexeddb_data = {\r\n  //               name: info.name,\r\n  //               email: info.email,\r\n  //               contact_number1: info.contact_number1,\r\n  //               contact_number2: info.contact_number2,\r\n  //               retail_size: info.retail_size,\r\n  //               it_automation: info.it_automation,\r\n  //               no_of_mobile: info.no_of_mobile,\r\n  //               no_of_tab: info.no_of_tab,\r\n  //               no_of_computer: info.no_of_computer,\r\n  //               no_of_printer: info.no_of_printer,\r\n  //               no_of_scanner: info.no_of_scanner,\r\n  //               latitude: info.latitude,\r\n  //               longitude: info.longitude,\r\n  //               mysql_sync: true,\r\n  //               image: info.image\r\n  //             }\r\n\r\n  //             await db.put(\"details\", indexeddb_data)\r\n  //             .then((res) => {\r\n  //               console.log(res);\r\n\r\n  //               const temp = info.email + \"has been added successfully\" ;\r\n  //               seterror(temp);\r\n  //               setsubmitted(true);\r\n\r\n  //             });\r\n  //             }\r\n  //           })\r\n  //           .catch(async(err) => {\r\n  //             console.log(err);\r\n  //               console.log(err.message);\r\n  //               if ( err.message == \"Network Error\" )\r\n  //               {\r\n  //               }\r\n  //             else\r\n  //             {\r\n  //               if( err.response.status >= 400 && err.response.status <= 599  )\r\n  //               {\r\n  //                 const temp = info.email + err.message + \" \" + err.response.data.email + \" Please enter valid Data \";\r\n  //                 seterror(temp);\r\n  //                 await db.delete(\"details\",info.email );\r\n  //               }\r\n  //               else\r\n  //               {\r\n  //                 const temp = info.email + + err.message ;\r\n  //                 seterror(temp);\r\n  //                 await db.delete(\"details\",info.email );\r\n  //               }\r\n  //             }\r\n\r\n  //           });\r\n\r\n  //       }\r\n  //     } )\r\n  //   }\r\n  //   use_effect_update_mysql_with_idb();\r\n\r\n  // }, [] );\r\n\r\n  const HandleLiveCapture = (image) => {\r\n    \r\n    // if(isMobile)\r\n    // {\r\n    //   window.ReactNativeWebView.postMessage(JSON.stringify({ message: \"your message\" , data: \"your data\"}));\r\n    //   window.onload = (event) => {\r\n    //     setcheckexpo(\"PAGE LOADED\");\r\n    //   }\r\n    // }\r\n    \r\n\r\n    setlive_capture(image);\r\n    setimage_upload();\r\n    console.log(image);\r\n    setblobimage(image);\r\n    var stringLength = image.length - \"data:image/jpeg;base64,\".length;\r\n    var sizeInBytes = 4 * Math.ceil(stringLength / 3) * 0.5624896334383812;\r\n    var sizeInKb = sizeInBytes / 1000;\r\n    console.log(sizeInKb);\r\n    setlive_capture_size(sizeInKb);\r\n  };\r\n\r\n  const getlatlog = async (lat, long) => {\r\n    setlatitude(lat);\r\n    setlongitude(long);\r\n    setlocated(latitude && longitude ? true : false);\r\n  };\r\n\r\n  const handlesubmit = async (e) => {\r\n    e.preventDefault();\r\n    seterror(\"\");\r\n    setsubmitted(false);\r\n    const db = await openDB(\"retail\", 1);\r\n\r\n    if (located) {\r\n      if (await db.get(\"details\", email)) {\r\n        seterror(\"Email ID already registered\");\r\n      } else if (contact1 === contact2) {\r\n        seterror(\"Both the contact number can't be same\");\r\n      } else if (retailsize <= 0) {\r\n        const temp = \"Retail size can't be \" + retailsize;\r\n        seterror(temp);\r\n      } else if (!mobile && !tab && !computer && !printer && !scanner) {\r\n        const temp = \"Please choose the machine\";\r\n        seterror(temp);\r\n      } else if (mobile && nomobile <= 0) {\r\n        const temp = \"Number of mobiles can't be \" + nomobile;\r\n        seterror(temp);\r\n      } else if (tab && notab <= 0) {\r\n        const temp = \"Number of tabs can't be \" + notab;\r\n        seterror(temp);\r\n      } else if (computer && nocomputer <= 0) {\r\n        const temp = \"Number of computers can't be \" + nocomputer;\r\n        seterror(temp);\r\n      } else if (printer && noprinter <= 0) {\r\n        const temp = \"Number of printers can't be \" + noprinter;\r\n        seterror(temp);\r\n      } else if (scanner && noscanner <= 0) {\r\n        const temp = \"Number of scanners can't be \" + noscanner;\r\n        seterror(temp);\r\n      } else if (!(image_upload || live_capture)) {\r\n        const temp = \" Please capture a live image or upload image \";\r\n        seterror(temp);\r\n      } else if (image_upload && image_upload_size > 524288) {\r\n        const temp = \" Uploaded Image is more than 512KB \";\r\n        seterror(temp);\r\n      } else if (live_capture && live_capture_size > 512) {\r\n        const temp = \" Captured Image is more than 512KB \";\r\n        seterror(temp);\r\n      } else {\r\n        let form_data = new FormData();\r\n        form_data.append(\"name\", name);\r\n        form_data.append(\"email\", email);\r\n        form_data.append(\"contact_number1\", contact1);\r\n        form_data.append(\"contact_number2\", contact2);\r\n        form_data.append(\"retail_size\", retailsize);\r\n        form_data.append(\"it_automation\", itautomation);\r\n        form_data.append(\"no_of_mobile\", nomobile);\r\n        form_data.append(\"no_of_tab\", notab);\r\n        form_data.append(\"no_of_computer\", nocomputer);\r\n        form_data.append(\"no_of_printer\", noprinter);\r\n        form_data.append(\"no_of_scanner\", noscanner);\r\n        form_data.append(\"latitude\", latitude);\r\n        form_data.append(\"longitude\", longitude);\r\n        form_data.append(\"image\", blobimage);\r\n\r\n        const indexeddb_data = {\r\n          name: name,\r\n          email: email,\r\n          contact_number1: contact1,\r\n          contact_number2: contact2,\r\n          retail_size: retailsize,\r\n          it_automation: itautomation,\r\n          no_of_mobile: nomobile,\r\n          no_of_tab: notab,\r\n          no_of_computer: nocomputer,\r\n          no_of_printer: noprinter,\r\n          no_of_scanner: noscanner,\r\n          latitude: latitude,\r\n          longitude: longitude,\r\n          mysql_sync: true,\r\n          image: blobimage,\r\n        };\r\n        axios\r\n          .post(\r\n            \"https://django-retail-app.herokuapp.com/retail/create/\",\r\n            form_data,\r\n            {\r\n              headers: {\r\n                \"content-type\": \"multipart/form-data\",\r\n              },\r\n            }\r\n          )\r\n          .then(async (response) => {\r\n            // const json_data =await response.json();\r\n            // console.log(\"mysql response\", json_data);\r\n            console.log(\" FETCH RESPONSE \" + response.status);\r\n\r\n            if (response.status >= 400 && response.status <= 599) {\r\n              const temp = \"response status \" + response.status;\r\n              seterror(temp);\r\n            } else {\r\n              db.add(\"details\", indexeddb_data).then((res) => {\r\n                console.log(res);\r\n              });\r\n              seterror(\"Retail Information Successfully Submitted\");\r\n              setsubmitted(true);\r\n            }\r\n          })\r\n          .catch(async (err) => {\r\n            console.log(err);\r\n            console.log(err.message);\r\n            if (err.message == \"Network Error\") {\r\n              const indexeddb_data_sync_false = {\r\n                name: name,\r\n                email: email,\r\n                contact_number1: contact1,\r\n                contact_number2: contact2,\r\n                retail_size: retailsize,\r\n                it_automation: itautomation,\r\n                no_of_mobile: nomobile,\r\n                no_of_tab: notab,\r\n                no_of_computer: nocomputer,\r\n                no_of_printer: noprinter,\r\n                no_of_scanner: noscanner,\r\n                latitude: latitude,\r\n                longitude: longitude,\r\n                image: blobimage,\r\n                mysql_sync: false,\r\n              };\r\n              db.add(\"details\", indexeddb_data_sync_false).then((res) => {\r\n                console.log(res);\r\n                console.log(\"--\");\r\n              });\r\n              seterror(\r\n                \"There is a Network Error, Retail Information SAVED, Data will be validated once the Network is back\"\r\n              );\r\n              setsubmitted(true);\r\n\r\n              // const registration = await navigator.serviceWorker.ready;\r\n              // await registration.sync.register(email);\r\n\r\n              // await window.ReactNativeWebView.postMessage('Data from WebView / Website');\r\n\r\n              // setTimeout(()=> {\r\n                // if(isMobile)\r\n                // {\r\n                //   window.ReactNativeWebView.postMessage(JSON.stringify({ message: \"your message\" , data: \"your data\"}));\r\n                // }\r\n              // }, 2000);\r\n\r\n              // await navigator.ReactNativeWebView.postMessage('Data from WebView / Website') ;\r\n\r\n              //   navigator.serviceWorker.ready(serviceWorkerRegistration => {\r\n              //     serviceWorkerRegistration.sync.register('some-unique-tag');\r\n              //     console.log(\" SYNC REGISTERED IN CATCH \");\r\n              //  });\r\n\r\n              //  navigator.serviceWorker.ready( (reg) => {\r\n              //   reg.sync.register('SYNCDATA');\r\n              //   console.log(\" SYNC REGISTERED IN NEW CATCH \");\r\n              //  }  )\r\n            } else {\r\n              if (err.response.status >= 400 && err.response.status <= 599) {\r\n                const temp =\r\n                  err.message +\r\n                  \" \" +\r\n                  err.response.data.email +\r\n                  \" Please enter valid Data \";\r\n                seterror(temp);\r\n              } else {\r\n                const temp = err.message;\r\n                seterror(temp);\r\n              }\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      seterror(\"Please select your location\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"getdata\" onSubmit={handlesubmit}>\r\n        <span className=\"heading\">Enter Retail Info here</span>\r\n\r\n        <div className=\"lbl_ipt\">\r\n          <label className=\"label\">Name*</label>\r\n          <input\r\n            className=\"input\"\r\n            type=\"text\"\r\n            onChange={(e) => {\r\n              setname(e.target.value);\r\n            }}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"lbl_ipt\">\r\n          <label className=\"label\">E-Mail*</label>\r\n          <input\r\n            className=\"input\"\r\n            type=\"email\"\r\n            onChange={(e) => {\r\n              setemail(e.target.value);\r\n            }}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"lbl_ipt\">\r\n          <label className=\"label contact_font\">Contact Number 1*</label>\r\n          <input\r\n            className=\"input\"\r\n            placeholder=\"10 digit\"\r\n            type=\"tel\"\r\n            pattern=\"[0-9]{10}\"\r\n            onChange={(e) => {\r\n              setcontact1(Number(e.target.value));\r\n            }}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"lbl_ipt\">\r\n          <label className=\"label contact_font\">Contact Number 2</label>\r\n          <input\r\n            className=\"input\"\r\n            placeholder=\"10 digit\"\r\n            type=\"tel\"\r\n            pattern=\"[0-9]{10}\"\r\n            onChange={(e) => {\r\n              setcontact2(Number(e.target.value));\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"lbl_ipt\">\r\n          <label className=\"label\">Retail Size*</label>\r\n          <input\r\n            className=\"input\"\r\n            type=\"number\"\r\n            placeholder=\"in sq feet area\"\r\n            onChange={(e) => {\r\n              setretailsize(Number(e.target.value));\r\n            }}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"lbl_ipt\">\r\n          <label className=\"label\">IT Automation*</label>\r\n          <select\r\n            value={itautomation}\r\n            onChange={(e) => {\r\n              setitautomation(e.target.value);\r\n            }}\r\n            required\r\n          >\r\n            <option value=\"Automated\">Automated</option>\r\n            <option value=\"Non-Automated\">Non-Automated</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"slt_e-comm\">\r\n          <label className=\"label\">Types of Machine</label>\r\n\r\n          <div className=\"align_chbox_lbl\">\r\n            <label className=\"machine_css\">\r\n              <input\r\n                type=\"checkbox\"\r\n                value={mobile}\r\n                onChange={(e) => {\r\n                  setmobile(e.currentTarget.checked);\r\n                }}\r\n              />\r\n              mobile\r\n            </label>\r\n          </div>\r\n          {mobile && (\r\n            <input\r\n              className=\"input\"\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                setnomobile(Number(e.target.value));\r\n              }}\r\n              placeholder=\"Number of Devices\"\r\n              required={mobile}\r\n            />\r\n          )}\r\n\r\n          <br />\r\n          <div className=\"align_chbox_lbl\">\r\n            <label className=\"machine_css\">\r\n              <input\r\n                type=\"checkbox\"\r\n                value={tab}\r\n                onChange={(e) => {\r\n                  settab(e.currentTarget.checked);\r\n                }}\r\n              />\r\n              tab\r\n            </label>\r\n          </div>\r\n          {tab && (\r\n            <input\r\n              className=\"input\"\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                setnotab(Number(e.target.value));\r\n              }}\r\n              placeholder=\"Number of Devices\"\r\n              required={tab}\r\n            />\r\n          )}\r\n\r\n          <br />\r\n          <div className=\"align_chbox_lbl\">\r\n            <label className=\"machine_css\">\r\n              <input\r\n                type=\"checkbox\"\r\n                value={computer}\r\n                onChange={(e) => {\r\n                  setcomputer(e.currentTarget.checked);\r\n                }}\r\n              />\r\n              computer\r\n            </label>\r\n          </div>\r\n          {computer && (\r\n            <input\r\n              className=\"input\"\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                setnocomputer(Number(e.target.value));\r\n              }}\r\n              placeholder=\"Number of Devices\"\r\n              required={computer}\r\n            />\r\n          )}\r\n\r\n          <br />\r\n          <div className=\"align_chbox_lbl\">\r\n            <label className=\"machine_css\">\r\n              <input\r\n                type=\"checkbox\"\r\n                value={printer}\r\n                onChange={(e) => {\r\n                  setprinter(e.currentTarget.checked);\r\n                }}\r\n              />\r\n              printer\r\n            </label>\r\n          </div>\r\n          {printer && (\r\n            <input\r\n              className=\"input\"\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                setnoprinter(Number(e.target.value));\r\n              }}\r\n              placeholder=\"Number of Devices\"\r\n              required={printer}\r\n            />\r\n          )}\r\n\r\n          <br />\r\n          <div className=\"align_chbox_lbl\">\r\n            <label className=\"machine_css\">\r\n              <input\r\n                type=\"checkbox\"\r\n                value={scanner}\r\n                onChange={(e) => {\r\n                  setscanner(e.currentTarget.checked);\r\n                }}\r\n              />\r\n              scanner\r\n            </label>\r\n          </div>\r\n          {scanner && (\r\n            <input\r\n              className=\"input\"\r\n              type=\"number\"\r\n              onChange={(e) => {\r\n                setnoscanner(Number(e.target.value));\r\n              }}\r\n              placeholder=\"Number of Devices\"\r\n              required={scanner}\r\n            />\r\n          )}\r\n          <br />\r\n        </div>\r\n        <GoogleMaps AddLatLong={getlatlog} />\r\n        <CameraModule AddLiveImage={HandleLiveCapture} />\r\n        <div>\r\n          {live_capture && <img src={live_capture} alt=\"live_capture\" />}\r\n        </div>\r\n\r\n        <div className=\"lbl_ipt\">\r\n          <label className=\"label\">Photo</label>\r\n          <input\r\n            className=\"input\"\r\n            type=\"file\"\r\n            accept=\"image/png, image/jpeg\"\r\n            onChange={(e) => {\r\n              setimage_upload(URL.createObjectURL(e.target.files[0]));\r\n              setlive_capture();\r\n              setblobimage(e.target.files[0]);\r\n              console.log(e.target.files[0].size);\r\n              setimage_upload_size(e.target.files[0].size);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          {image_upload && (\r\n            <img\r\n              src={image_upload}\r\n              className=\"image_upload_style\"\r\n              alt=\"image_upload\"\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <label className={`label ${submitted ? \"green\" : \"error_display\"} `}>\r\n          {error}\r\n        </label>\r\n\r\n        <div className=\"lbl_ipt form_btn\">\r\n          <button type=\"submit\" className=\"form_button\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      <div>\r\n      {/* {checkexpo} <br /> */}\r\n        {name} <br />\r\n        {email}\r\n        <br />\r\n        {contact1}\r\n        <br />\r\n        {contact2}\r\n        <br />\r\n        {retailsize}\r\n        <br />\r\n        {itautomation}\r\n        <br />\r\n        {located && <p>LOCATION SPOTTED</p>}\r\n        <br />\r\n        {latitude} <br />\r\n        {longitude} <br />\r\n        {mobile && nomobile} <br />\r\n        {tab && notab} <br />\r\n        {computer && nocomputer} <br />\r\n        {printer && noprinter} <br />\r\n        {scanner && noscanner} <br />\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Main;\r\n","E:\\COURSE\\REACT_JS_n_PWA\\crud\\retail\\src\\components\\Home\\Home.js",["67","68","69"],[],"import {useRef, useState } from 'react'\r\nimport React from 'react'\r\nimport Main from '../RetailCreate/Main';\r\nimport styles from './Sidenav.module.css';\r\nimport List from '../RetailList/List';\r\nconst Home = () => {\r\n    const open_click = useRef();\r\n    const [show_create, setshow_create] = useState(true);\r\n    const OpenNav = () => {\r\n        open_click.current.style.width = '250px';\r\n    }\r\n    const CloseNav = () => {\r\n        open_click.current.style.width = '0';\r\n    }\r\n\r\n  return (\r\n<>\r\n    <div id=\"mySidenav\" className={styles.sidenav} ref={open_click}>\r\n        <a onClick={CloseNav} className={styles.closebtn}>&times;</a>\r\n        <a onClick={(() => { setshow_create(true); CloseNav(); })}>Create</a>\r\n        <a onClick={(() => { setshow_create(false); CloseNav(); })}>List</a>\r\n    </div>\r\n    <div>\r\n    <span className={styles.open} onClick={OpenNav}>&#9776; open</span>\r\n    </div>\r\n    { show_create && <Main/>}\r\n    { !show_create && <List/>}\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home","E:\\COURSE\\REACT_JS_n_PWA\\crud\\retail\\src\\components\\RetailList\\List.js",["70","71","72","73"],[],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Table from \"../Table/Table\";\r\nimport { openDB, deleteDB, wrap, unwrap } from \"idb\";\r\n\r\nconst List = () => {\r\n  const [list, setlist] = useState([]);\r\n  useEffect(() => {\r\n    openDB(\"retail_list\", 1, {\r\n      upgrade(db) {\r\n        db.createObjectStore(\"list_data\", { keyPath: \"retail_id\" });\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const get_data_mysql = async () => {\r\n      const db = await openDB(\"retail_list\", 1);\r\n      axios\r\n        .get(\"https://django-retail-app.herokuapp.com/retail/create/\")\r\n        .then(async (response) => {\r\n          setlist(response.data);\r\n\r\n          const retail_data = response.data;\r\n          db.clear(\"list_data\");\r\n\r\n          retail_data.map(async (info) => {\r\n            console.log(info.email);\r\n            const mysql_data = {\r\n              retail_id: info.retail_id,\r\n              name: info.name,\r\n              email: info.email,\r\n              contact_number1: info.contact_number1,\r\n              contact_number2: info.contact_number2,\r\n              retail_size: info.retail_size,\r\n              it_automation: info.it_automation,\r\n              no_of_mobile: info.no_of_mobile,\r\n              no_of_tab: info.no_of_tab,\r\n              no_of_computer: info.no_of_computer,\r\n              no_of_printer: info.no_of_printer,\r\n              no_of_scanner: info.no_of_scanner,\r\n              latitude: info.latitude,\r\n              longitude: info.longitude,\r\n              date_time: info.date_time,\r\n              image: info.image,\r\n            };\r\n\r\n            if (!(await db.get(\"list_data\", info.retail_id))) {\r\n              db.add(\"list_data\", mysql_data).then((res) => {\r\n                console.log(res);\r\n              });\r\n            }\r\n          });\r\n        })\r\n        .catch(async (err) => {\r\n          console.log(err);\r\n          if (err.message == \"Network Error\") {\r\n            const data = await db.getAll(\"list_data\");\r\n            setlist(data);\r\n          }\r\n        });\r\n    };\r\n    get_data_mysql();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Table list={list} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","E:\\COURSE\\REACT_JS_n_PWA\\crud\\retail\\src\\components\\Table\\Table.js",[],[],{"ruleId":"74","severity":1,"message":"75","line":6,"column":28,"nodeType":"76","messageId":"77","endLine":6,"endColumn":47},{"ruleId":"78","severity":1,"message":"79","line":19,"column":5,"nodeType":"80","endLine":19,"endColumn":16,"suggestions":"81"},{"ruleId":"74","severity":1,"message":"82","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":17},{"ruleId":"74","severity":1,"message":"83","line":22,"column":10,"nodeType":"76","messageId":"77","endLine":22,"endColumn":17},{"ruleId":"74","severity":1,"message":"84","line":4,"column":18,"nodeType":"76","messageId":"77","endLine":4,"endColumn":26},{"ruleId":"74","severity":1,"message":"85","line":4,"column":28,"nodeType":"76","messageId":"77","endLine":4,"endColumn":32},{"ruleId":"74","severity":1,"message":"86","line":4,"column":34,"nodeType":"76","messageId":"77","endLine":4,"endColumn":40},{"ruleId":"74","severity":1,"message":"87","line":8,"column":10,"nodeType":"76","messageId":"77","endLine":8,"endColumn":21},{"ruleId":"74","severity":1,"message":"88","line":8,"column":23,"nodeType":"76","messageId":"77","endLine":8,"endColumn":33},{"ruleId":"74","severity":1,"message":"89","line":8,"column":35,"nodeType":"76","messageId":"77","endLine":8,"endColumn":44},{"ruleId":"74","severity":1,"message":"90","line":8,"column":46,"nodeType":"76","messageId":"77","endLine":8,"endColumn":54},{"ruleId":"74","severity":1,"message":"91","line":41,"column":10,"nodeType":"76","messageId":"77","endLine":41,"endColumn":19},{"ruleId":"74","severity":1,"message":"92","line":41,"column":21,"nodeType":"76","messageId":"77","endLine":41,"endColumn":33},{"ruleId":"93","severity":1,"message":"94","line":298,"column":29,"nodeType":"95","messageId":"96","endLine":298,"endColumn":31},{"ruleId":"97","severity":1,"message":"98","line":19,"column":9,"nodeType":"99","endLine":19,"endColumn":59},{"ruleId":"97","severity":1,"message":"98","line":20,"column":9,"nodeType":"99","endLine":20,"endColumn":68},{"ruleId":"97","severity":1,"message":"98","line":21,"column":9,"nodeType":"99","endLine":21,"endColumn":69},{"ruleId":"74","severity":1,"message":"84","line":4,"column":18,"nodeType":"76","messageId":"77","endLine":4,"endColumn":26},{"ruleId":"74","severity":1,"message":"85","line":4,"column":28,"nodeType":"76","messageId":"77","endLine":4,"endColumn":32},{"ruleId":"74","severity":1,"message":"86","line":4,"column":34,"nodeType":"76","messageId":"77","endLine":4,"endColumn":40},{"ruleId":"93","severity":1,"message":"94","line":57,"column":27,"nodeType":"95","messageId":"96","endLine":57,"endColumn":29},"no-unused-vars","'setvideoConstraints' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside React.useCallback.","ArrayExpression",["100"],"'useMemo' is defined but never used.","'located' is assigned a value but never used.","'deleteDB' is defined but never used.","'wrap' is defined but never used.","'unwrap' is defined but never used.","'BrowserView' is defined but never used.","'MobileView' is defined but never used.","'isBrowser' is defined but never used.","'isMobile' is defined but never used.","'checkexpo' is assigned a value but never used.","'setcheckexpo' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"101","fix":"102"},"Update the dependencies array to be: [props]",{"range":"103","text":"104"},[439,450],"[props]"]